{"version":3,"file":"static/js/91.e940938b.chunk.js","mappings":"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","sources":["../node_modules/@stablelib/random/source/browser.ts","../node_modules/query-string/index.js","../node_modules/filter-obj/index.js","../node_modules/@stablelib/hkdf/hkdf.ts","../node_modules/@stablelib/int/int.ts","../node_modules/uint8arrays/esm/src/alloc.js","../node_modules/uint8arrays/esm/src/util/as-uint8array.js","../node_modules/uint8arrays/esm/src/util/bases.js","../node_modules/@web3modal/siwe/node_modules/proxy-compare/src/index.ts","../node_modules/@web3modal/siwe/node_modules/valtio/esm/vanilla.mjs","../node_modules/@web3modal/siwe/node_modules/valtio/esm/vanilla/utils.mjs","../../../../../core/controller/SIWEController.ts","../../../../../../scaffold/partials/w3m-connecting-siwe/styles.ts","../../../../../../scaffold/partials/w3m-connecting-siwe/index.ts","../../../../../../scaffold/views/w3m-connecting-siwe-view/index.ts","../node_modules/@stablelib/sha256/sha256.ts","../node_modules/@stablelib/hmac/hmac.ts","../node_modules/@stablelib/random/source/node.ts","../node_modules/@stablelib/chacha/chacha.ts","../node_modules/@stablelib/binary/binary.ts","../node_modules/@stablelib/random/source/system.ts","../node_modules/@stablelib/wipe/wipe.ts","../node_modules/@stablelib/poly1305/poly1305.ts","../node_modules/@stablelib/chacha20poly1305/chacha20poly1305.ts","../node_modules/@stablelib/constant-time/constant-time.ts","../node_modules/strict-uri-encode/index.js","../node_modules/split-on-first/index.js","../node_modules/@stablelib/x25519/x25519.ts","../node_modules/@stablelib/random/random.ts","../node_modules/decode-uri-component/index.js","../node_modules/@stablelib/hash/hash.ts"],"sourcesContent":["// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\n\nconst QUOTA = 65536;\n\nexport class BrowserRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto?: { getRandomValues: typeof window.crypto.getRandomValues };\n\n    constructor() {\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || (self as { msCrypto?: any }).msCrypto) // IE11 has msCrypto\n            : null;\n\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hkdf implements HKDF key derivation function.\n */\n\nimport { Hash } from \"@stablelib/hash\";\nimport { HMAC, hmac } from \"@stablelib/hmac\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function.\n *\n * Implements HKDF from RFC5869.\n *\n * Expands the given master key with salt and info into\n * a limited stream of key material.\n */\nexport class HKDF {\n    private _hmac: HMAC;\n    private _buffer: Uint8Array;\n    private _bufpos: number;\n    private _counter = new Uint8Array(1); // starts with zero\n    private _hash: new () => Hash;\n    private _info?: Uint8Array;\n\n    /**\n     * Create a new HKDF instance for the given hash function\n     * with the master key, optional salt, and info.\n     *\n     * - Master key is a high-entropy secret key (not a password).\n     * - Salt is a non-secret random value.\n     * - Info is application- and/or context-specific information.\n     */\n    constructor(hash: new () => Hash,\n        key: Uint8Array,\n        salt = new Uint8Array(0),\n        info?: Uint8Array) {\n\n        this._hash = hash;\n        this._info = info;\n\n        // HKDF-Extract uses salt as HMAC key, and key as data.\n        const okm = hmac(this._hash, salt, key);\n\n        // Initialize HMAC for expanding with extracted key.\n        this._hmac = new HMAC(hash, okm);\n\n        // Allocate buffer.\n        this._buffer = new Uint8Array(this._hmac.digestLength);\n        this._bufpos = this._buffer.length;\n    }\n\n    // Fill buffer with new block of HKDF-Extract output.\n    private _fillBuffer(): void {\n        // Increment counter.\n        this._counter[0]++;\n\n        const ctr = this._counter[0];\n\n        // Check if counter overflowed.\n        if (ctr === 0) {\n            throw new Error(\"hkdf: cannot expand more\");\n        }\n\n        // Prepare HMAC instance for new data with old key.\n        this._hmac.reset();\n\n        // Hash in previous output if it was generated\n        // (i.e. counter is greater than 1).\n        if (ctr > 1) {\n            this._hmac.update(this._buffer);\n        }\n\n        // Hash in info if it exists.\n        if (this._info) {\n            this._hmac.update(this._info);\n        }\n\n        // Hash in the counter.\n        this._hmac.update(this._counter);\n\n        // Output result to buffer and clean HMAC instance.\n        this._hmac.finish(this._buffer);\n\n        // Reset buffer position.\n        this._bufpos = 0;\n    }\n\n    /**\n     * Expand returns next key material of the given length.\n     *\n     * It throws if expansion limit is reached (which is\n     * 254 digests of the underlying HMAC function).\n     */\n    expand(length: number): Uint8Array {\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i++) {\n            if (this._bufpos === this._buffer.length) {\n                this._fillBuffer();\n            }\n            out[i] = this._buffer[this._bufpos++];\n        }\n        return out;\n    }\n\n    clean(): void {\n        this._hmac.clean();\n        wipe(this._buffer);\n        wipe(this._counter);\n        this._bufpos = 0;\n    }\n}\n\n// TODO(dchest): maybe implement deriveKey?\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package int provides helper functions for integerss.\n */\n\n// Shim using 16-bit pieces.\nfunction imulShim(a: number, b: number): number {\n    const ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    const bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexport const mul = (Math as { imul?(a: number, b: number): number }).imul || imulShim;\n\n/** 32-bit integer addition.  */\nexport function add(a: number, b: number): number {\n    return (a + b) | 0;\n}\n\n/**  32-bit integer subtraction.  */\nexport function sub(a: number, b: number): number {\n    return (a - b) | 0;\n}\n\n/** 32-bit integer left rotation */\nexport function rotl(x: number, n: number): number {\n    return x << n | x >>> (32 - n);\n}\n\n/** 32-bit integer left rotation */\nexport function rotr(x: number, n: number): number {\n    return x << (32 - n) | x >>> n;\n}\n\nfunction isIntegerShim(n: number): boolean {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexport const isInteger = (Number as { isInteger?(n: number): boolean }).isInteger || isIntegerShim;\n\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexport const MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexport const isSafeInteger = (n: number): boolean =>\n    isInteger(n) && (n >= -MAX_SAFE_INTEGER && n <= MAX_SAFE_INTEGER);\n","import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","// symbols\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst IS_TARGET_COPIED_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst TARGET_CACHE_PROPERTY = 't';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// Properties that are both non-configurable and non-writable will break\n// the proxy get trap when we try to return a recursive/child compare proxy\n// from them. We can avoid this by making a copy of the target object with\n// all descriptors marked as configurable, see `copyTargetObject`.\n// See: https://github.com/dai-shi/proxy-compare/pull/8\nconst needsToCopyTargetObject = (obj: object) => (\n  Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n    (descriptor) => !descriptor.configurable && !descriptor.writable,\n  )\n);\n\n// Make a copy with all descriptors marked as configurable.\nconst copyTargetObject = <T extends object>(obj: T): T => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj) as T;\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [IS_TARGET_COPIED_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [TARGET_CACHE_PROPERTY]?: TargetCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\ntype TargetCache<T extends object> = WeakMap<\n  object,\n  readonly [target: T, copiedTarget?: T]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, isTargetCopied: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [IS_TARGET_COPIED_PROPERTY]: isTargetCopied,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (\n    type:\n      | typeof HAS_KEY_PROPERTY\n      | typeof ALL_OWN_KEYS_PROPERTY\n      | typeof HAS_OWN_KEY_PROPERTY\n      | typeof KEYS_PROPERTY,\n    key?: string | symbol,\n  ) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = {};\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (type === ALL_OWN_KEYS_PROPERTY) {\n        used[ALL_OWN_KEYS_PROPERTY] = true;\n      } else {\n        let set = used[type];\n        if (!set) {\n          set = new Set();\n          used[type] = set;\n        }\n        set.add(key as string | symbol);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(KEYS_PROPERTY, key);\n      return createProxy(\n        Reflect.get(target, key),\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n        state[TARGET_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      recordUsage(HAS_KEY_PROPERTY, key);\n      return Reflect.has(target, key);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      recordUsage(HAS_OWN_KEY_PROPERTY, key);\n      return Reflect.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(ALL_OWN_KEYS_PROPERTY);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (isTargetCopied) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n  targetCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  let targetAndCopied = (\n    targetCache && (targetCache as TargetCache<typeof obj>).get(obj)\n  );\n  if (!targetAndCopied) {\n    const target = getOriginalObject(obj);\n    if (needsToCopyTargetObject(target)) {\n      targetAndCopied = [target, copyTargetObject(target)];\n    } else {\n      targetAndCopied = [target];\n    }\n    targetCache?.set(obj, targetAndCopied);\n  }\n  const [target, copiedTarget] = targetAndCopied;\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (\n    !handlerAndState\n    || handlerAndState[1][IS_TARGET_COPIED_PROPERTY] !== !!copiedTarget\n  ) {\n    handlerAndState = createProxyHandler<typeof target>(target, !!copiedTarget);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      copiedTarget || target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  handlerAndState[1][TARGET_CACHE_PROPERTY] = targetCache as TargetCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isAllOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  try {\n    for (const key of used[HAS_KEY_PROPERTY] || []) {\n      changed = Reflect.has(prevObj, key) !== Reflect.has(nextObj, key);\n      if (changed) return changed;\n    }\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n      changed = isAllOwnKeysChanged(prevObj, nextObj);\n      if (changed) return changed;\n    } else {\n      for (const key of used[HAS_OWN_KEY_PROPERTY] || []) {\n        const hasPrev = !!Reflect.getOwnPropertyDescriptor(prevObj, key);\n        const hasNext = !!Reflect.getOwnPropertyDescriptor(nextObj, key);\n        changed = hasPrev !== hasNext;\n        if (changed) return changed;\n      }\n    }\n    for (const key of used[KEYS_PROPERTY] || []) {\n      changed = isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n      if (changed) return changed;\n    }\n    if (changed === null) changed = true;\n    return changed;\n  } finally {\n    if (cache) {\n      cache.set(prevObj, {\n        [NEXT_OBJECT_PROPERTY]: nextObj,\n        [CHANGED_PROPERTY]: changed,\n      });\n    }\n  }\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n/**\n * Convert `affected` to path list\n *\n * `affected` is a weak map which is not printable.\n * This function is can convert it to printable path list.\n * It's for debugging purpose.\n *\n * @param obj - An object that is used with `createProxy`.\n * @param affected - A weak map that is used with `createProxy`.\n * @param onlyWithValues - An optional boolean to exclude object getters.\n * @returns - An array of paths.\n */\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n  onlyWithValues?: boolean,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used[HAS_KEY_PROPERTY]?.forEach((key) => {\n        const segment = `:has(${String(key)})`;\n        list.push(path ? [...path, segment] : [segment]);\n      });\n      if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        const segment = ':ownKeys';\n        list.push(path ? [...path, segment] : [segment]);\n      } else {\n        used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n          const segment = `:hasOwn(${String(key)})`;\n          list.push(path ? [...path, segment] : [segment]);\n        });\n      }\n      used[KEYS_PROPERTY]?.forEach((key) => {\n        if (!onlyWithValues || 'value' in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk((x as any)[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n","import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(snap, key)) {\n      return;\n    }\n    const value = Reflect.get(target, key);\n    const desc = {\n      value,\n      enumerable: true,\n      // This is intentional to avoid copying with proxy-compare.\n      // It's still non-writable, so it avoids assigning a value.\n      configurable: true\n    };\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n    } else if (value instanceof Promise) {\n      delete desc.value;\n      desc.get = () => handlePromise(value);\n    } else if (proxyStateMap.has(value)) {\n      const [target2, ensureVersion] = proxyStateMap.get(\n        value\n      );\n      desc.value = createSnapshot(\n        target2,\n        ensureVersion(),\n        handlePromise\n      );\n    }\n    Object.defineProperty(snap, key, desc);\n  });\n  return Object.preventExtensions(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxyFunction(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (\"value\" in desc) {\n      proxyObject[key] = initialObject[key];\n      delete desc.value;\n      delete desc.writable;\n    }\n    Object.defineProperty(baseObject, key, desc);\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [defaultProxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return defaultProxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n","import { subscribe, snapshot, proxy, getVersion, ref, unstable_buildProxyFunction } from 'valtio/vanilla';\n\nfunction subscribeKey(proxyObject, key, callback, notifyInSync) {\n  let prevValue = proxyObject[key];\n  return subscribe(\n    proxyObject,\n    () => {\n      const nextValue = proxyObject[key];\n      if (!Object.is(prevValue, nextValue)) {\n        callback(prevValue = nextValue);\n      }\n    },\n    notifyInSync\n  );\n}\n\nlet currentCleanups;\nfunction watch(callback, options) {\n  let alive = true;\n  const cleanups = /* @__PURE__ */ new Set();\n  const subscriptions = /* @__PURE__ */ new Map();\n  const cleanup = () => {\n    if (alive) {\n      alive = false;\n      cleanups.forEach((clean) => clean());\n      cleanups.clear();\n      subscriptions.forEach((unsubscribe) => unsubscribe());\n      subscriptions.clear();\n    }\n  };\n  const revalidate = () => {\n    if (!alive) {\n      return;\n    }\n    cleanups.forEach((clean) => clean());\n    cleanups.clear();\n    const proxiesToSubscribe = /* @__PURE__ */ new Set();\n    const parent = currentCleanups;\n    currentCleanups = cleanups;\n    try {\n      const cleanupReturn = callback((proxyObject) => {\n        proxiesToSubscribe.add(proxyObject);\n        return proxyObject;\n      });\n      if (cleanupReturn) {\n        cleanups.add(cleanupReturn);\n      }\n    } finally {\n      currentCleanups = parent;\n    }\n    subscriptions.forEach((unsubscribe, proxyObject) => {\n      if (proxiesToSubscribe.has(proxyObject)) {\n        proxiesToSubscribe.delete(proxyObject);\n      } else {\n        subscriptions.delete(proxyObject);\n        unsubscribe();\n      }\n    });\n    proxiesToSubscribe.forEach((proxyObject) => {\n      const unsubscribe = subscribe(proxyObject, revalidate, options == null ? void 0 : options.sync);\n      subscriptions.set(proxyObject, unsubscribe);\n    });\n  };\n  if (currentCleanups) {\n    currentCleanups.add(cleanup);\n  }\n  revalidate();\n  return cleanup;\n}\n\nconst DEVTOOLS = Symbol();\nfunction devtools(proxyObject, options) {\n  if (typeof options === \"string\") {\n    console.warn(\n      \"string name option is deprecated, use { name }. https://github.com/pmndrs/valtio/pull/400\"\n    );\n    options = { name: options };\n  }\n  const { enabled, name = \"\", ...rest } = options || {};\n  let extension;\n  try {\n    extension = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch {\n  }\n  if (!extension) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\"[Warning] Please install/enable Redux devtools extension\");\n    }\n    return;\n  }\n  let isTimeTraveling = false;\n  const devtools2 = extension.connect({ name, ...rest });\n  const unsub1 = subscribe(proxyObject, (ops) => {\n    const action = ops.filter(([_, path]) => path[0] !== DEVTOOLS).map(([op, path]) => `${op}:${path.map(String).join(\".\")}`).join(\", \");\n    if (!action) {\n      return;\n    }\n    if (isTimeTraveling) {\n      isTimeTraveling = false;\n    } else {\n      const snapWithoutDevtools = Object.assign({}, snapshot(proxyObject));\n      delete snapWithoutDevtools[DEVTOOLS];\n      devtools2.send(\n        {\n          type: action,\n          updatedAt: (/* @__PURE__ */ new Date()).toLocaleString()\n        },\n        snapWithoutDevtools\n      );\n    }\n  });\n  const unsub2 = devtools2.subscribe((message) => {\n    var _a, _b, _c, _d, _e, _f;\n    if (message.type === \"ACTION\" && message.payload) {\n      try {\n        Object.assign(proxyObject, JSON.parse(message.payload));\n      } catch (e) {\n        console.error(\n          \"please dispatch a serializable value that JSON.parse() and proxy() support\\n\",\n          e\n        );\n      }\n    }\n    if (message.type === \"DISPATCH\" && message.state) {\n      if (((_a = message.payload) == null ? void 0 : _a.type) === \"JUMP_TO_ACTION\" || ((_b = message.payload) == null ? void 0 : _b.type) === \"JUMP_TO_STATE\") {\n        isTimeTraveling = true;\n        const state = JSON.parse(message.state);\n        Object.assign(proxyObject, state);\n      }\n      proxyObject[DEVTOOLS] = message;\n    } else if (message.type === \"DISPATCH\" && ((_c = message.payload) == null ? void 0 : _c.type) === \"COMMIT\") {\n      devtools2.init(snapshot(proxyObject));\n    } else if (message.type === \"DISPATCH\" && ((_d = message.payload) == null ? void 0 : _d.type) === \"IMPORT_STATE\") {\n      const actions = (_e = message.payload.nextLiftedState) == null ? void 0 : _e.actionsById;\n      const computedStates = ((_f = message.payload.nextLiftedState) == null ? void 0 : _f.computedStates) || [];\n      isTimeTraveling = true;\n      computedStates.forEach(({ state }, index) => {\n        const action = actions[index] || \"No action found\";\n        Object.assign(proxyObject, state);\n        if (index === 0) {\n          devtools2.init(snapshot(proxyObject));\n        } else {\n          devtools2.send(action, snapshot(proxyObject));\n        }\n      });\n    }\n  });\n  devtools2.init(snapshot(proxyObject));\n  return () => {\n    unsub1();\n    unsub2 == null ? void 0 : unsub2();\n  };\n}\n\nconst sourceObjectMap = /* @__PURE__ */ new WeakMap();\nconst derivedObjectMap = /* @__PURE__ */ new WeakMap();\nconst markPending = (sourceObject, callback) => {\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject);\n  if (sourceObjectEntry) {\n    sourceObjectEntry[0].forEach((subscription) => {\n      const { d: derivedObject } = subscription;\n      if (sourceObject !== derivedObject) {\n        markPending(derivedObject);\n      }\n    });\n    ++sourceObjectEntry[2];\n    if (callback) {\n      sourceObjectEntry[3].add(callback);\n    }\n  }\n};\nconst checkPending = (sourceObject, callback) => {\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject);\n  if (sourceObjectEntry == null ? void 0 : sourceObjectEntry[2]) {\n    sourceObjectEntry[3].add(callback);\n    return true;\n  }\n  return false;\n};\nconst unmarkPending = (sourceObject) => {\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject);\n  if (sourceObjectEntry) {\n    --sourceObjectEntry[2];\n    if (!sourceObjectEntry[2]) {\n      sourceObjectEntry[3].forEach((callback) => callback());\n      sourceObjectEntry[3].clear();\n    }\n    sourceObjectEntry[0].forEach((subscription) => {\n      const { d: derivedObject } = subscription;\n      if (sourceObject !== derivedObject) {\n        unmarkPending(derivedObject);\n      }\n    });\n  }\n};\nconst addSubscription = (subscription) => {\n  const { s: sourceObject, d: derivedObject } = subscription;\n  let derivedObjectEntry = derivedObjectMap.get(derivedObject);\n  if (!derivedObjectEntry) {\n    derivedObjectEntry = [/* @__PURE__ */ new Set()];\n    derivedObjectMap.set(subscription.d, derivedObjectEntry);\n  }\n  derivedObjectEntry[0].add(subscription);\n  let sourceObjectEntry = sourceObjectMap.get(sourceObject);\n  if (!sourceObjectEntry) {\n    const subscriptions = /* @__PURE__ */ new Set();\n    const unsubscribe = subscribe(\n      sourceObject,\n      (ops) => {\n        subscriptions.forEach((subscription2) => {\n          const {\n            d: derivedObject2,\n            c: callback,\n            n: notifyInSync,\n            i: ignoreKeys\n          } = subscription2;\n          if (sourceObject === derivedObject2 && ops.every(\n            (op) => op[1].length === 1 && ignoreKeys.includes(op[1][0])\n          )) {\n            return;\n          }\n          if (subscription2.p) {\n            return;\n          }\n          markPending(sourceObject, callback);\n          if (notifyInSync) {\n            unmarkPending(sourceObject);\n          } else {\n            subscription2.p = Promise.resolve().then(() => {\n              delete subscription2.p;\n              unmarkPending(sourceObject);\n            });\n          }\n        });\n      },\n      true\n    );\n    sourceObjectEntry = [subscriptions, unsubscribe, 0, /* @__PURE__ */ new Set()];\n    sourceObjectMap.set(sourceObject, sourceObjectEntry);\n  }\n  sourceObjectEntry[0].add(subscription);\n};\nconst removeSubscription = (subscription) => {\n  const { s: sourceObject, d: derivedObject } = subscription;\n  const derivedObjectEntry = derivedObjectMap.get(derivedObject);\n  derivedObjectEntry == null ? void 0 : derivedObjectEntry[0].delete(subscription);\n  if ((derivedObjectEntry == null ? void 0 : derivedObjectEntry[0].size) === 0) {\n    derivedObjectMap.delete(derivedObject);\n  }\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject);\n  if (sourceObjectEntry) {\n    const [subscriptions, unsubscribe] = sourceObjectEntry;\n    subscriptions.delete(subscription);\n    if (!subscriptions.size) {\n      unsubscribe();\n      sourceObjectMap.delete(sourceObject);\n    }\n  }\n};\nconst listSubscriptions = (derivedObject) => {\n  const derivedObjectEntry = derivedObjectMap.get(derivedObject);\n  if (derivedObjectEntry) {\n    return Array.from(derivedObjectEntry[0]);\n  }\n  return [];\n};\nconst unstable_deriveSubscriptions = {\n  add: addSubscription,\n  remove: removeSubscription,\n  list: listSubscriptions\n};\nfunction derive(derivedFns, options) {\n  const proxyObject = (options == null ? void 0 : options.proxy) || proxy({});\n  const notifyInSync = !!(options == null ? void 0 : options.sync);\n  const derivedKeys = Object.keys(derivedFns);\n  derivedKeys.forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(proxyObject, key)) {\n      throw new Error(\"object property already defined\");\n    }\n    const fn = derivedFns[key];\n    let lastDependencies = null;\n    const evaluate = () => {\n      if (lastDependencies) {\n        if (Array.from(lastDependencies).map(([p]) => checkPending(p, evaluate)).some((isPending) => isPending)) {\n          return;\n        }\n        if (Array.from(lastDependencies).every(\n          ([p, entry]) => getVersion(p) === entry.v\n        )) {\n          return;\n        }\n      }\n      const dependencies = /* @__PURE__ */ new Map();\n      const get = (p) => {\n        dependencies.set(p, { v: getVersion(p) });\n        return p;\n      };\n      const value = fn(get);\n      const subscribeToDependencies = () => {\n        dependencies.forEach((entry, p) => {\n          var _a;\n          const lastSubscription = (_a = lastDependencies == null ? void 0 : lastDependencies.get(p)) == null ? void 0 : _a.s;\n          if (lastSubscription) {\n            entry.s = lastSubscription;\n          } else {\n            const subscription = {\n              s: p,\n              // sourceObject\n              d: proxyObject,\n              // derivedObject\n              k: key,\n              // derived key\n              c: evaluate,\n              // callback\n              n: notifyInSync,\n              i: derivedKeys\n              // ignoringKeys\n            };\n            addSubscription(subscription);\n            entry.s = subscription;\n          }\n        });\n        lastDependencies == null ? void 0 : lastDependencies.forEach((entry, p) => {\n          if (!dependencies.has(p) && entry.s) {\n            removeSubscription(entry.s);\n          }\n        });\n        lastDependencies = dependencies;\n      };\n      if (value instanceof Promise) {\n        value.finally(subscribeToDependencies);\n      } else {\n        subscribeToDependencies();\n      }\n      proxyObject[key] = value;\n    };\n    evaluate();\n  });\n  return proxyObject;\n}\nfunction underive(proxyObject, options) {\n  const keysToDelete = (options == null ? void 0 : options.delete) ? /* @__PURE__ */ new Set() : null;\n  listSubscriptions(proxyObject).forEach((subscription) => {\n    const { k: key } = subscription;\n    if (!(options == null ? void 0 : options.keys) || options.keys.includes(key)) {\n      removeSubscription(subscription);\n      if (keysToDelete) {\n        keysToDelete.add(key);\n      }\n    }\n  });\n  if (keysToDelete) {\n    keysToDelete.forEach((key) => {\n      delete proxyObject[key];\n    });\n  }\n}\n\nfunction addComputed_DEPRECATED(proxyObject, computedFns_FAKE, targetObject = proxyObject) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"addComputed is deprecated. Please consider using `derive`. Falling back to emulation with derive. https://github.com/pmndrs/valtio/pull/201\"\n    );\n  }\n  const derivedFns = {};\n  Object.keys(computedFns_FAKE).forEach((key) => {\n    derivedFns[key] = (get) => computedFns_FAKE[key](get(proxyObject));\n  });\n  return derive(derivedFns, { proxy: targetObject });\n}\n\nfunction proxyWithComputed_DEPRECATED(initialObject, computedFns) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      'proxyWithComputed is deprecated. Please follow \"Computed Properties\" guide in docs.'\n    );\n  }\n  Object.keys(computedFns).forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(initialObject, key)) {\n      throw new Error(\"object property already defined\");\n    }\n    const computedFn = computedFns[key];\n    const { get, set } = typeof computedFn === \"function\" ? { get: computedFn } : computedFn;\n    const desc = {};\n    desc.get = () => get(snapshot(proxyObject));\n    if (set) {\n      desc.set = (newValue) => set(proxyObject, newValue);\n    }\n    Object.defineProperty(initialObject, key, desc);\n  });\n  const proxyObject = proxy(initialObject);\n  return proxyObject;\n}\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nlet refSet;\nconst deepClone = (obj) => {\n  if (!refSet) {\n    refSet = unstable_buildProxyFunction()[2];\n  }\n  if (!isObject(obj) || refSet.has(obj)) {\n    return obj;\n  }\n  const baseObject = Array.isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n  Reflect.ownKeys(obj).forEach((key) => {\n    baseObject[key] = deepClone(obj[key]);\n  });\n  return baseObject;\n};\nfunction proxyWithHistory(initialValue, skipSubscribe = false) {\n  const proxyObject = proxy({\n    value: initialValue,\n    history: ref({\n      wip: void 0,\n      // to avoid infinite loop\n      snapshots: [],\n      index: -1\n    }),\n    clone: deepClone,\n    canUndo: () => proxyObject.history.index > 0,\n    undo: () => {\n      if (proxyObject.canUndo()) {\n        proxyObject.value = proxyObject.history.wip = proxyObject.clone(\n          proxyObject.history.snapshots[--proxyObject.history.index]\n        );\n      }\n    },\n    canRedo: () => proxyObject.history.index < proxyObject.history.snapshots.length - 1,\n    redo: () => {\n      if (proxyObject.canRedo()) {\n        proxyObject.value = proxyObject.history.wip = proxyObject.clone(\n          proxyObject.history.snapshots[++proxyObject.history.index]\n        );\n      }\n    },\n    saveHistory: () => {\n      proxyObject.history.snapshots.splice(proxyObject.history.index + 1);\n      proxyObject.history.snapshots.push(snapshot(proxyObject).value);\n      ++proxyObject.history.index;\n    },\n    subscribe: () => subscribe(proxyObject, (ops) => {\n      if (ops.every(\n        (op) => op[1][0] === \"value\" && (op[0] !== \"set\" || op[2] !== proxyObject.history.wip)\n      )) {\n        proxyObject.saveHistory();\n      }\n    })\n  });\n  proxyObject.saveHistory();\n  if (!skipSubscribe) {\n    proxyObject.subscribe();\n  }\n  return proxyObject;\n}\n\nfunction proxySet(initialValues) {\n  const set = proxy({\n    data: Array.from(new Set(initialValues)),\n    has(value) {\n      return this.data.indexOf(value) !== -1;\n    },\n    add(value) {\n      let hasProxy = false;\n      if (typeof value === \"object\" && value !== null) {\n        hasProxy = this.data.indexOf(proxy(value)) !== -1;\n      }\n      if (this.data.indexOf(value) === -1 && !hasProxy) {\n        this.data.push(value);\n      }\n      return this;\n    },\n    delete(value) {\n      const index = this.data.indexOf(value);\n      if (index === -1) {\n        return false;\n      }\n      this.data.splice(index, 1);\n      return true;\n    },\n    clear() {\n      this.data.splice(0);\n    },\n    get size() {\n      return this.data.length;\n    },\n    forEach(cb) {\n      this.data.forEach((value) => {\n        cb(value, value, this);\n      });\n    },\n    get [Symbol.toStringTag]() {\n      return \"Set\";\n    },\n    toJSON() {\n      return new Set(this.data);\n    },\n    [Symbol.iterator]() {\n      return this.data[Symbol.iterator]();\n    },\n    values() {\n      return this.data.values();\n    },\n    keys() {\n      return this.data.values();\n    },\n    entries() {\n      return new Set(this.data).entries();\n    }\n  });\n  Object.defineProperties(set, {\n    data: {\n      enumerable: false\n    },\n    size: {\n      enumerable: false\n    },\n    toJSON: {\n      enumerable: false\n    }\n  });\n  Object.seal(set);\n  return set;\n}\n\nfunction proxyMap(entries) {\n  const map = proxy({\n    data: Array.from(entries || []),\n    has(key) {\n      return this.data.some((p) => p[0] === key);\n    },\n    set(key, value) {\n      const record = this.data.find((p) => p[0] === key);\n      if (record) {\n        record[1] = value;\n      } else {\n        this.data.push([key, value]);\n      }\n      return this;\n    },\n    get(key) {\n      var _a;\n      return (_a = this.data.find((p) => p[0] === key)) == null ? void 0 : _a[1];\n    },\n    delete(key) {\n      const index = this.data.findIndex((p) => p[0] === key);\n      if (index === -1) {\n        return false;\n      }\n      this.data.splice(index, 1);\n      return true;\n    },\n    clear() {\n      this.data.splice(0);\n    },\n    get size() {\n      return this.data.length;\n    },\n    toJSON() {\n      return new Map(this.data);\n    },\n    forEach(cb) {\n      this.data.forEach((p) => {\n        cb(p[1], p[0], this);\n      });\n    },\n    keys() {\n      return this.data.map((p) => p[0]).values();\n    },\n    values() {\n      return this.data.map((p) => p[1]).values();\n    },\n    entries() {\n      return new Map(this.data).entries();\n    },\n    get [Symbol.toStringTag]() {\n      return \"Map\";\n    },\n    [Symbol.iterator]() {\n      return this.entries();\n    }\n  });\n  Object.defineProperties(map, {\n    data: {\n      enumerable: false\n    },\n    size: {\n      enumerable: false\n    },\n    toJSON: {\n      enumerable: false\n    }\n  });\n  Object.seal(map);\n  return map;\n}\n\nexport { addComputed_DEPRECATED as addComputed, derive, devtools, proxyMap, proxySet, proxyWithComputed_DEPRECATED as proxyWithComputed, proxyWithHistory, subscribeKey, underive, unstable_deriveSubscriptions, watch };\n",null,null,null,null,"// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package sha256 implements SHA-2-256 cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 32;\nexport const BLOCK_SIZE = 64;\n\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nexport class SHA256 implements SerializableHash {\n    /** Length of hash output */\n    readonly digestLength: number = DIGEST_LENGTH;\n\n    /** Block size */\n    readonly blockSize: number = BLOCK_SIZE;\n\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    protected _state = new Int32Array(8); // hash state\n    private _temp = new Int32Array(64); // temporary state\n    private _buffer = new Uint8Array(128); // buffer for data to hash\n    private _bufferLength = 0; // number of bytes in buffer\n    private _bytesHashed = 0; // number of total bytes hashed\n    private _finished = false; // indicates whether the hash was finalized\n\n    constructor() {\n        this.reset();\n    }\n\n    protected _initState() {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    }\n\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    reset(): this {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    clean() {\n        wipe(this._buffer);\n        wipe(this._temp);\n        this.reset();\n    }\n\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    update(data: Uint8Array, dataLength: number = data.length): this {\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            const bytesHashed = this._bytesHashed;\n            const left = this._bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n\n            this._buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n\n            this._finished = true;\n        }\n\n        for (let i = 0; i < this.digestLength / 4; i++) {\n            writeUint32BE(this._state[i], out, i * 4);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the final hash digest.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    restoreState(savedState: SavedState): this {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans state returned by saveState().\n     */\n    cleanSavedState(savedState: SavedState) {\n        wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    }\n}\n\nexport type SavedState = {\n    state: Int32Array;\n    buffer: Uint8Array | undefined;\n    bufferLength: number;\n    bytesHashed: number;\n};\n\n// Constants\nconst K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\nfunction hashBlocks(w: Int32Array, v: Int32Array, p: Uint8Array, pos: number, len: number): number {\n    while (len >= 64) {\n        let a = v[0];\n        let b = v[1];\n        let c = v[2];\n        let d = v[3];\n        let e = v[4];\n        let f = v[5];\n        let g = v[6];\n        let h = v[7];\n\n        for (let i = 0; i < 16; i++) {\n            let j = pos + i * 4;\n            w[i] = readUint32BE(p, j);\n        }\n\n        for (let i = 16; i < 64; i++) {\n            let u = w[i - 2];\n            let t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n\n            u = w[i - 15];\n            let t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            let t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n            let t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n\nexport function hash(data: Uint8Array): Uint8Array {\n    const h = new SHA256();\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hmac implements HMAC algorithm.\n */\n\nimport { Hash, SerializableHash, isSerializableHash } from \"@stablelib/hash\";\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n *  HMAC implements hash-based message authentication algorithm.\n */\nexport class HMAC implements SerializableHash {\n    readonly blockSize: number;\n    readonly digestLength: number;\n\n    private _inner: Hash; // inner hash\n    private _outer: Hash; // outer hash\n\n    private _finished = false; // true if HMAC was finalized\n\n    // Copies of hash states after keying.\n    // Need for quick reset without hashing the key again.\n    private _innerKeyedState: any | undefined;\n    private _outerKeyedState: any | undefined;\n\n    /**\n     * Constructs a new HMAC with the given Hash and secret key.\n     */\n    constructor(hash: new () => Hash | SerializableHash, key: Uint8Array) {\n        // Initialize inner and outer hashes.\n        this._inner = new hash();\n        this._outer = new hash();\n\n        // Set block and digest sizes for this HMAC\n        // instance to values from the hash.\n        this.blockSize = this._outer.blockSize;\n        this.digestLength = this._outer.digestLength;\n\n        // Pad temporary stores a key (or its hash) padded with zeroes.\n        const pad = new Uint8Array(this.blockSize);\n\n        if (key.length > this.blockSize) {\n            // If key is bigger than hash block size, it must be\n            // hashed and this hash is used as a key instead.\n            this._inner.update(key).finish(pad).clean();\n        } else {\n            // Otherwise, copy the key into pad.\n            pad.set(key);\n        }\n\n        // Now two different keys are derived from padded key\n        // by xoring a different byte value to each.\n\n        // To make inner hash key, xor byte 0x36 into pad.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        // Update inner hash with the result.\n        this._inner.update(pad);\n\n        // To make outer hash key, xor byte 0x5c into pad.\n        // But since we already xored 0x36 there, we must\n        // first undo this by xoring it again.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        // Update outer hash with the result.\n        this._outer.update(pad);\n\n        // Save states of both hashes, so that we can quickly restore\n        // them later in reset() without the need to remember the actual\n        // key and perform this initialization again.\n        if (isSerializableHash(this._inner) && isSerializableHash(this._outer)) {\n            this._innerKeyedState = this._inner.saveState();\n            this._outerKeyedState = this._outer.saveState();\n        }\n\n        // Clean pad.\n        wipe(pad);\n    }\n\n    /**\n     * Returns HMAC state to the state initialized with key\n     * to make it possible to run HMAC over the other data with the same\n     * key without creating a new instance.\n     */\n    reset(): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\n        }\n        // Restore keyed states of inner and outer hashes.\n        this._inner.restoreState(this._innerKeyedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans HMAC state.\n     */\n    clean() {\n        if (isSerializableHash(this._inner)) {\n            this._inner.cleanSavedState(this._innerKeyedState);\n        }\n        if (isSerializableHash(this._outer)) {\n            this._outer.cleanSavedState(this._outerKeyedState);\n        }\n        this._inner.clean();\n        this._outer.clean();\n    }\n\n    /**\n     * Updates state with provided data.\n     */\n    update(data: Uint8Array): this {\n        this._inner.update(data);\n        return this;\n    }\n\n    /**\n     * Finalizes HMAC and puts the result in out.\n     */\n    finish(out: Uint8Array): this {\n        if (this._finished) {\n            // If HMAC was finalized, outer hash is also finalized,\n            // so it produces the same digest it produced when it\n            // was finalized.\n            this._outer.finish(out);\n            return this;\n        }\n\n        // Finalize inner hash and store the result temporarily.\n        this._inner.finish(out);\n\n        // Update outer hash with digest of inner hash and and finalize it.\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\n        this._finished = true;\n\n        return this;\n    }\n\n    /**\n     * Returns the computed message authentication code.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Saves HMAC state.\n     * This function is needed for PBKDF2 optimization.\n     */\n    saveState(): any {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\n        }\n        return this._inner.saveState();\n    }\n\n    restoreState(savedState: any): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\n        }\n        this._inner.restoreState(savedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    cleanSavedState(savedState: any) {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\n        }\n        this._inner.cleanSavedState(savedState);\n    }\n}\n\n/**\n * Returns HMAC using the given hash constructor for the key over data.\n */\nexport function hmac(hash: new () => Hash, key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new HMAC(hash, key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two HMAC digests are equal.\n * Uses constant-time comparison to avoid leaking timing information.\n *\n * Example:\n *\n *    const receivedDigest = ...\n *    const realDigest = hmac(SHA256, key, data);\n *    if (!equal(receivedDigest, realDigest)) {\n *        throw new Error(\"Authentication error\");\n *    }\n */\nexport const equal = constantTimeEqual;\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { wipe } from \"@stablelib/wipe\";\n\ndeclare function require(name: string): any;\n\nexport class NodeRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto: { randomBytes(n: number): Uint8Array } | undefined;\n\n    constructor() {\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n\n        // Allocate output array.\n        const out = new Uint8Array(length);\n\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n\n        // Cleanup.\n        wipe(buffer);\n\n        return out;\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha implements ChaCha stream cipher.\n */\n\nimport { writeUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\n// Number of ChaCha rounds (ChaCha20).\nconst ROUNDS = 20;\n\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out: Uint8Array, input: Uint8Array, key: Uint8Array): void {\n    let j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    let j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    let j2 = 0x79622D32; // \"2-by\"\n    let j3 = 0x6B206574; // \"te k\"\n    let j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    let j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    let j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    let j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    let j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    let j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    let j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    let j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    let j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    let j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    let j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    let j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n\n    let x0 = j0;\n    let x1 = j1;\n    let x2 = j2;\n    let x3 = j3;\n    let x4 = j4;\n    let x5 = j5;\n    let x6 = j6;\n    let x7 = j7;\n    let x8 = j8;\n    let x9 = j9;\n    let x10 = j10;\n    let x11 = j11;\n    let x12 = j12;\n    let x13 = j13;\n    let x14 = j14;\n    let x15 = j15;\n\n    for (let i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 12) | x5 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 12) | x7 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 7) | x7 << 7;\n\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 12) | x6 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 12) | x4 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    writeUint32LE(x0 + j0 | 0, out, 0);\n    writeUint32LE(x1 + j1 | 0, out, 4);\n    writeUint32LE(x2 + j2 | 0, out, 8);\n    writeUint32LE(x3 + j3 | 0, out, 12);\n    writeUint32LE(x4 + j4 | 0, out, 16);\n    writeUint32LE(x5 + j5 | 0, out, 20);\n    writeUint32LE(x6 + j6 | 0, out, 24);\n    writeUint32LE(x7 + j7 | 0, out, 28);\n    writeUint32LE(x8 + j8 | 0, out, 32);\n    writeUint32LE(x9 + j9 | 0, out, 36);\n    writeUint32LE(x10 + j10 | 0, out, 40);\n    writeUint32LE(x11 + j11 | 0, out, 44);\n    writeUint32LE(x12 + j12 | 0, out, 48);\n    writeUint32LE(x13 + j13 | 0, out, 52);\n    writeUint32LE(x14 + j14 | 0, out, 56);\n    writeUint32LE(x15 + j15 | 0, out, 60);\n}\n\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nexport function streamXOR(key: Uint8Array, nonce: Uint8Array,\n    src: Uint8Array, dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n\n    let nc: Uint8Array;\n    let counterLength: number;\n\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    } else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n\n    // Allocate temporary space for ChaCha block.\n    const block = new Uint8Array(64);\n\n    for (let i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n\n        // XOR block bytes with src into dst.\n        for (let j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n\n    // Cleanup temporary space.\n    wipe(block);\n\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe(nc);\n    }\n\n    return dst;\n}\n\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nexport function stream(key: Uint8Array, nonce: Uint8Array,\n    dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\n\nfunction incrementCounter(counter: Uint8Array, pos: number, len: number) {\n    let carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\n\nimport { isSafeInteger } from \"@stablelib/int\";\n\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16BE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16LE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\n\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16BE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\n\nexport const writeInt16BE = writeUint16BE;\n\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16LE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\n\nexport const writeInt16LE = writeUint16LE;\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32BE(array: Uint8Array, offset = 0): number {\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32LE(array: Uint8Array, offset = 0): number {\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\n\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\n\nexport const writeInt32BE = writeUint32BE;\n\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\n\n\nexport const writeInt32LE = writeUint32LE;\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64BE(array: Uint8Array, offset = 0): number {\n    const hi = readInt32BE(array, offset);\n    const lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64BE(array: Uint8Array, offset = 0): number {\n    const hi = readUint32BE(array, offset);\n    const lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64LE(array: Uint8Array, offset = 0): number {\n    const lo = readInt32LE(array, offset);\n    const hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64LE(array: Uint8Array, offset = 0): number {\n    const lo = readUint32LE(array, offset);\n    const hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64BE = writeUint64BE;\n\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64LE = writeUint64LE;\n\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintBE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintLE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintBE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintLE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\n\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\n\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\n\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\n\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { BrowserRandomSource } from \"./browser\";\nimport { NodeRandomSource } from \"./node\";\n\nexport class SystemRandomSource implements RandomSource {\n    isAvailable = false;\n    name = \"\";\n    private _source: RandomSource;\n\n    constructor() {\n        // Try browser.\n        this._source = new BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n\n        // If no browser source, try Node.\n        this._source = new NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n\n        // No sources, we're out of options.\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package wipe implements functions for zeroing arrays.\n */\n\nexport type NumericArray = number[] | Uint8Array | Int8Array | Uint16Array\n    | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nexport function wipe(array: NumericArray): NumericArray {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\n\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 16;\n\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nexport class Poly1305 {\n    readonly digestLength = DIGEST_LENGTH;\n\n    private _buffer = new Uint8Array(16);\n    private _r = new Uint16Array(10);\n    private _h = new Uint16Array(10);\n    private _pad = new Uint16Array(8);\n    private _leftover = 0;\n    private _fin = 0;\n    private _finished = false;\n\n    constructor(key: Uint8Array) {\n        let t0 = key[0] | key[1] << 8; this._r[0] = (t0) & 0x1fff;\n        let t1 = key[2] | key[3] << 8; this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        let t2 = key[4] | key[5] << 8; this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        let t3 = key[6] | key[7] << 8; this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        let t4 = key[8] | key[9] << 8; this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        let t5 = key[10] | key[11] << 8; this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        let t6 = key[12] | key[13] << 8; this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        let t7 = key[14] | key[15] << 8; this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n\n    private _blocks(m: Uint8Array, mpos: number, bytes: number) {\n        let hibit = this._fin ? 0 : 1 << 11;\n\n        let h0 = this._h[0],\n            h1 = this._h[1],\n            h2 = this._h[2],\n            h3 = this._h[3],\n            h4 = this._h[4],\n            h5 = this._h[5],\n            h6 = this._h[6],\n            h7 = this._h[7],\n            h8 = this._h[8],\n            h9 = this._h[9];\n\n        let r0 = this._r[0],\n            r1 = this._r[1],\n            r2 = this._r[2],\n            r3 = this._r[3],\n            r4 = this._r[4],\n            r5 = this._r[5],\n            r6 = this._r[6],\n            r7 = this._r[7],\n            r8 = this._r[8],\n            r9 = this._r[9];\n\n        while (bytes >= 16) {\n            let t0 = m[mpos + 0] | m[mpos + 1] << 8; h0 += (t0) & 0x1fff;\n            let t1 = m[mpos + 2] | m[mpos + 3] << 8; h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            let t2 = m[mpos + 4] | m[mpos + 5] << 8; h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            let t3 = m[mpos + 6] | m[mpos + 7] << 8; h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            let t4 = m[mpos + 8] | m[mpos + 9] << 8; h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            let t5 = m[mpos + 10] | m[mpos + 11] << 8; h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            let t6 = m[mpos + 12] | m[mpos + 13] << 8; h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            let t7 = m[mpos + 14] | m[mpos + 15] << 8; h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n\n            let c = 0;\n\n            let d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13); d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13); d0 &= 0x1fff;\n\n            let d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13); d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13); d1 &= 0x1fff;\n\n            let d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13); d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13); d2 &= 0x1fff;\n\n            let d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13); d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13); d3 &= 0x1fff;\n\n            let d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13); d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13); d4 &= 0x1fff;\n\n            let d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13); d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13); d5 &= 0x1fff;\n\n            let d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13); d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13); d6 &= 0x1fff;\n\n            let d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13); d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13); d7 &= 0x1fff;\n\n            let d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13); d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13); d8 &= 0x1fff;\n\n            let d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13); d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13); d9 &= 0x1fff;\n\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    }\n\n    finish(mac: Uint8Array, macpos = 0): this {\n        const g = new Uint16Array(10);\n        let c: number;\n        let mask: number;\n        let f: number;\n        let i: number;\n\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n\n        this._finished = true;\n        return this;\n    }\n\n    update(m: Uint8Array): this {\n        let mpos = 0;\n        let bytes = m.length;\n        let want: number;\n\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (let i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n\n        if (bytes) {\n            for (let i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n\n        return this;\n    }\n\n    digest(): Uint8Array {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        let mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    }\n\n    clean(): this {\n        wipe(this._buffer);\n        wipe(this._r);\n        wipe(this._h);\n        wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    }\n}\n\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nexport function oneTimeAuth(key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new Poly1305(key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length !== DIGEST_LENGTH || b.length !== DIGEST_LENGTH) {\n        return false;\n    }\n    return constantTimeEqual(a, b);\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha20poly1305 implements ChaCha20-Poly1305 AEAD.\n */\n\nimport { AEAD } from \"@stablelib/aead\";\nimport { streamXOR, stream } from \"@stablelib/chacha\";\nimport { Poly1305 } from \"@stablelib/poly1305\";\nimport { wipe } from \"@stablelib/wipe\";\nimport { writeUint64LE } from \"@stablelib/binary\";\nimport { equal } from \"@stablelib/constant-time\";\n\nexport const KEY_LENGTH = 32;\nexport const NONCE_LENGTH = 12;\nexport const TAG_LENGTH = 16;\n\nconst ZEROS = new Uint8Array(16);\n\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nexport class ChaCha20Poly1305 implements AEAD {\n    readonly nonceLength = NONCE_LENGTH;\n    readonly tagLength = TAG_LENGTH;\n\n    private _key: Uint8Array;\n\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    constructor(key: Uint8Array) {\n        if (key.length !== KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    seal(nonce: Uint8Array, plaintext: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Allocate space for sealed ciphertext.\n        const resultLength = plaintext.length + this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Encrypt plaintext.\n        streamXOR(this._key, counter, plaintext, result, 4);\n\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length),\n            authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    open(nonce: Uint8Array, sealed: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array | null {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        const calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey,\n            sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n\n        // Constant-time compare tags and return null if they differ.\n        if (!equal(calculatedTag,\n            sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n\n        // Allocate space for decrypted plaintext.\n        const resultLength = sealed.length - this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Decrypt.\n        streamXOR(this._key, counter,\n            sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    clean(): this {\n        wipe(this._key);\n        return this;\n    }\n\n    private _authenticate(tagOut: Uint8Array, authKey: Uint8Array,\n        ciphertext: Uint8Array, associatedData?: Uint8Array) {\n\n        // Initialize Poly1305 with authKey.\n        const h = new Poly1305(authKey);\n\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        const length = new Uint8Array(8);\n        if (associatedData) {\n            writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n\n        // Authenticate length of ciphertext.\n        writeUint64LE(ciphertext.length, length);\n        h.update(length);\n\n        // Get tag and copy it into tagOut.\n        const tag = h.digest();\n        for (let i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n\n        // Cleanup.\n        h.clean();\n        wipe(tag);\n        wipe(length);\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nexport function select(subject: number, resultIfOne: number, resultIfZero: number): number {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\n\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nexport function lessOrEqual(a: number, b: number): number {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\n\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nexport function compare(a: Uint8Array, b: Uint8Array): number {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\n\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package x25519 implements X25519 key agreement.\n */\n\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const PUBLIC_KEY_LENGTH = 32;\nexport const SECRET_KEY_LENGTH = 32;\nexport const SHARED_KEY_LENGTH = 32;\n\n// TODO(dchest): some functions are copies of ../sign/ed25519.\n// Find a way to combine them without opening up to public.\n\n// Ported from TweetNaCl.js, which is ported from TweetNaCl\n// by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n// https://tweetnacl.js.org\n\n// TweetNaCl contributors:\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\n// Public domain.\n// https://tweetnacl.cr.yp.to/\n\ntype GF = Float64Array;\n\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init?: number[]): GF {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n\n// Base point.\nconst _9 = new Uint8Array(32); _9[0] = 9;\n\nconst _121665 = gf([0xdb41, 1]);\n\nfunction car25519(o: GF) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p: GF, q: GF, b: number) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\n\nfunction pack25519(o: Uint8Array, n: GF) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\n\nfunction unpack25519(o: GF, n: Uint8Array) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\n\nfunction add(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\n\nfunction sub(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\n\nfunction mul(o: GF, a: GF, b: GF) {\n    let v: number, c: number,\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n\n    // first car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    // second car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\n\nfunction square(o: GF, a: GF) {\n    mul(o, a, a);\n}\n\nfunction inv25519(o: GF, inp: GF) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\n\nexport function scalarMult(n: Uint8Array, p: Uint8Array): Uint8Array {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(),\n        d = gf(), e = gf(), f = gf();\n\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n\n    unpack25519(x, p);\n\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n\n    a[0] = d[0] = 1;\n\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\n\nexport function scalarMultBase(n: Uint8Array): Uint8Array {\n    return scalarMult(n, _9);\n}\n\nexport interface KeyPair {\n    publicKey: Uint8Array;\n    secretKey: Uint8Array;\n}\n\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\n    if (seed.length !== SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\n\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\n    const seed = randomBytes(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    wipe(seed);\n    return result;\n}\n\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nexport function sharedKey(mySecretKey: Uint8Array, theirPublicKey: Uint8Array, rejectZero = false): Uint8Array {\n    if (mySecretKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n\n    const result = scalarMult(mySecretKey, theirPublicKey);\n\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n\n    return result;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package random provides functions to access system's\n * cryptographically secure random byte generator.\n */\n\nimport { RandomSource } from \"./source\";\nimport { SystemRandomSource } from \"./source/system\";\nimport { readUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport { RandomSource } from \"./source\";\n\nexport const defaultRandomSource = new SystemRandomSource();\n\nexport function randomBytes(length: number, prng: RandomSource = defaultRandomSource): Uint8Array {\n    return prng.randomBytes(length);\n}\n\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nexport function randomUint32(prng: RandomSource = defaultRandomSource): number {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = readUint32LE(buf);\n\n    // Clean the buffer.\n    wipe(buf);\n\n    return result;\n}\n\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomString(\n    length: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        wipe(buf);\n    }\n    return out;\n}\n\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomStringForEntropy(\n    bits: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hash provides interface for hash functions.\n */\n\n/**\n * Hash interface describes properties of\n * cryptographic hash functions.\n */\nexport interface Hash {\n    readonly digestLength: number;\n    readonly blockSize: number;\n    update(data: Uint8Array): this;\n    reset(): this;\n    finish(out: Uint8Array): this;\n    digest(): Uint8Array;\n    clean(): void;\n}\n\nexport interface SerializableHash extends Hash {\n    saveState(): any;\n    restoreState(savedState: any): this;\n    cleanSavedState(savedState: any): void;\n}\n\nexport function isSerializableHash(h: Hash): h is SerializableHash {\n    return (\n        typeof (h as SerializableHash).saveState !== \"undefined\" &&\n        typeof (h as SerializableHash).restoreState !== \"undefined\" &&\n        typeof (h as SerializableHash).cleanSavedState !== \"undefined\"\n    );\n}\n\n// TODO(dchest): figure out the standardized interface for XOF such as\n// SHAKE and BLAKE2X.\n"],"names":["exports","constructor","isAvailable","isInstantiated","browserCrypto","self","crypto","msCrypto","undefined","getRandomValues","this","_crypto","randomBytes","length","Error","out","Uint8Array","i","subarray","Math","min","strictUriEncode","require","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","value","TypeError","encode","options","strict","encodeURIComponent","decode","keysSorter","input","Array","isArray","sort","Object","keys","a","b","Number","map","key","removeHash","hashStart","indexOf","slice","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","result","accumulator","exec","replace","concat","includes","isEncodedArray","newValue","split","item","test","arrayValue","parserForArrayFormat","ret","create","param","k","reduce","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","join","keyValueSep","encoderForArrayFormat","objectCopy","filter","x","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","module","obj","predicate","isArr","val","hmac_1","wipe_1","HKDF","salt","info","_counter","_hash","_info","okm","hmac","_hmac","HMAC","_buffer","digestLength","_bufpos","prototype","_fillBuffer","ctr","reset","update","finish","expand","clean","wipe","imul","al","bl","n","isInteger","isFinite","floor","MAX_SAFE_INTEGER","allocUnsafe","size","arguments","globalThis","Buffer","buf","buffer","byteOffset","byteLength","createCodec","name","prefix","encoder","decoder","string","TextDecoder","str","TextEncoder","substring","ascii","String","fromCharCode","charCodeAt","_objectSpread","utf8","hex","bases","base16","latin1","binary","t","s","getPrototypeOf","c","WeakMap","l","e","has","get","h","set","isObject","proxyStateMap","refSet","WeakSet","buildProxyFunction","objectIs","is","newProxy","target","handler","Proxy","canProxy","iterator","Date","RegExp","ArrayBuffer","defaultHandlePromise","promise","status","reason","snapCache","createSnapshot","version","handlePromise","cache","snap","markToTrack","Reflect","ownKeys","forEach","getOwnPropertyDescriptor","desc","enumerable","configurable","Promise","target2","ensureVersion","defineProperty","preventExtensions","proxyCache","versionHolder","proxyFunction","initialObject","found","listeners","Set","notifyUpdate","op","nextVersion","listener","checkVersion","createPropListener","prop","newOp","propProxyStates","Map","removePropListener","_a","entry","delete","call","baseObject","deleteProperty","prevValue","deleted","receiver","hasPrevValue","getUntracked","nextValue","then","v","catch","childProxyState","addPropListener","propProxyState","remove","proxyObject","proxyState","nextCheckVersion","_ref","propVersion","add","_ref2","prevRemove","removeListener","_ref3","writable","defaultProxyFunction","subscribe","callback","notifyInSync","console","warn","ops","addListener","isListenerActive","push","splice","resolve","state","proxy","SIWEController","subscribeKey","subKey","sub","_getClient","_client","getNonce","address","client","nonce","setNonce","getSession","session","setSession","setStatus","_unused","createMessage","args","message","setMessage","verifyMessage","signIn","signOut","_client$onSignOut","onSignOut","onSignIn","_client$onSignIn","_client$onSignOut2","setSIWEClient","OptionsController","setIsSiweEnabled","enabled","css","_templateObject","_taggedTemplateLiteral","W3mConnectingSiwe","LitElement","_OptionsController$st","dappImageUrl","metadata","icons","walletImageUrl","StorageUtil","getConnectedWalletImageUrl","firstUpdated","_this$shadowRoot","visuals","shadowRoot","querySelectorAll","createAnimation","render","_this$dappImageUrl","html","element","translation","animate","transform","duration","easing","direction","iterations","Infinity","styles","__decorate","customElement","W3mConnectingSiweView","dappName","isSigning","_this$dappName","onRender","onCancel","bind","onSign","ModalController","close","EventsController","sendEvent","event","type","error","AccountController","preferredAccountType","W3mFrameRpcConstants","ACCOUNT_TYPES","SMART_ACCOUNT","SnackController","showError","isConnected","ConnectionController","disconnect","RouterController","binary_1","SHA256","blockSize","_state","Int32Array","_temp","_bufferLength","_bytesHashed","_finished","_initState","data","dataLength","dataPos","hashBlocks","bytesHashed","left","bitLenHi","bitLenLo","padLength","writeUint32BE","digest","saveState","bufferLength","restoreState","savedState","cleanSavedState","K","w","p","pos","len","d","f","g","j","readUint32BE","u","t1","t2","hash_1","constant_time_1","_inner","_outer","pad","isSerializableHash","_innerKeyedState","_outerKeyedState","equal","nodeCrypto","core","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","writeUint32LE","streamXOR","src","dst","nonceInplaceCounterLength","nc","counterLength","block","incrementCounter","counter","carry","int_1","writeUint16BE","offset","writeUint16LE","readInt32BE","array","readInt32LE","readUint32LE","writeUint64BE","writeUint64LE","hi","lo","bitLength","mul","isSafeInteger","div","DataView","getFloat32","getFloat64","setFloat32","setFloat64","browser_1","node_1","_source","BrowserRandomSource","NodeRandomSource","Poly1305","DIGEST_LENGTH","_r","Uint16Array","_h","_pad","_leftover","_fin","t0","t3","t4","t5","t6","t7","_blocks","m","mpos","bytes","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","mac","macpos","mask","want","chacha_1","poly1305_1","ZEROS","ChaCha20Poly1305","nonceLength","tagLength","_key","seal","plaintext","associatedData","authKey","stream","resultLength","_authenticate","open","sealed","calculatedTag","tagOut","ciphertext","tag","compare","subject","resultIfOne","resultIfZero","toString","toUpperCase","separator","separatorIndex","random_1","gf","init","r","Float64Array","_9","_121665","car25519","o","sel25519","q","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","square","scalarMult","z","unpack25519","x32","x16","inp","inv25519","pack25519","scalarMultBase","generateKeyPairFromSeed","seed","secretKey","publicKey","system_1","defaultRandomSource","SystemRandomSource","ALPHANUMERIC","randomString","charset","prng","charsLen","maxByte","ceil","randomByte","charAt","bits","log","LN2","token","singleMatcher","multiMatcher","decodeComponents","components","decodeURIComponent","err","right","tokens","match","encodedURI","replaceMap","entries","customDecodeURIComponent"],"sourceRoot":""}